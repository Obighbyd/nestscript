func add() {
    VAR %r0;
    VAR @c0;
    ALLOC @c0;
    MOV @c0 10;
    VAR @c1;
    ALLOC @c1;
    MOV @c1 20;
    FUNC %r0 ___f___0;
    MOV $RET %r0;
}
func min() {
    VAR %r0;
    VAR @c0;
    ALLOC @c0;
    MOV @c0 10;
    FUNC %r0 ___f___1;
    MOV $RET %r0;
}
func main() {
    VAR %r0;
    VAR %r1;
    VAR %r2;
    VAR %r3;
    MOV_CTX %r0 "page";
    PUSH %r0;
    MOV_CTX %r1 "console";
    MOV %r2 "log";
    CALL_VAR %r1 %r2 1;
    VAR @c1;
    ALLOC @c1;
    MOV @c1 'Nice bil bilbil';
    VAR @c0;
    ALLOC @c0;
    FUNC @c0 ___f___2;
    VAR @c2;
    ALLOC @c2;
    MOV %r1 2;
    PUSH %r1;
    MOV %r1 1;
    PUSH %r1;
    CALL add 2;
    MOV @c2 $RET;
    FUNC %r1 ___f___3;
    MOV_CTX %r2 "page";
    MOV %r3 "handleTapGood";
    SET_KEY %r2 %r3 %r1;
    FUNC %r1 ___f___4;
    MOV_CTX %r2 "page";
    MOV %r3 "handleTapBad";
    SET_KEY %r2 %r3 %r1;
}
func ___f___0(a, b) {
    VAR %r0;
    VAR %r1;
    VAR %r2;
    VAR %r3;
    MOV %r0 @c0;
    ADD %r0 1;
    MOV @c0 %r0;
    MOV %r0 @c1;
    SUB %r0 1;
    MOV @c1 %r0;
    MOV %r0 @c0;
    PUSH %r0;
    MOV_CTX %r1 "console";
    MOV %r2 "log";
    CALL_VAR %r1 %r2 1;
    VAR g;
    FUNC g ___f___5;
    CALL_REG g 0;
    MOV g $RET;
    MOV %r1 a;
    MOV %r3 b;
    ADD %r1 %r3;
    MOV %r2 @c0;
    ADD %r1 %r2;
    MOV $RET %r1;
}
func ___f___1(c) {
    VAR %r0;
    VAR %r1;
    MOV %r0 @c0;
    SUB %r0 1;
    MOV @c0 %r0;
    MOV %r0 @c0;
    MOV %r1 c;
    ADD %r0 %r1;
    MOV $RET %r0;
}
func ___f___2() {
    VAR %r0;
    VAR %r1;
    MOV %r0 "no fun";
    PUSH %r0;
    MOV_CTX %r0 "console";
    MOV %r1 "log";
    CALL_VAR %r0 %r1 1;
    MOV %r0 "NONONO";
    MOV $RET %r0;
}
func ___f___3() {
    VAR %r0;
    VAR %r1;
    VAR %r2;
    VAR %r3;
    VAR %r4;
    VAR %r5;
    VAR %r6;
    VAR %r7;
    VAR %r8;
    VAR %r9;
    VAR %r10;
    VAR %r11;
    MOV_CTX %r0 "Object";
    PUSH %r0;
    CALL_REG @c0 0;
    MOV %r1 $RET;
    PUSH %r1;
    MOV %r1 @c1;
    PUSH %r1;
    MOV %r2 "THis is good + nice";
    PUSH %r2;
    MOV_CTX %r2 "console";
    MOV %r3 "log";
    CALL_VAR %r2 %r3 4;
    MOV %r3 4;
    PUSH %r3;
    MOV %r3 3;
    PUSH %r3;
    CALL_REG @c2 2;
    MOV %r2 $RET;
    PUSH %r2;
    MOV_CTX %r2 "console";
    MOV %r3 "log";
    CALL_VAR %r2 %r3 1;
    NEW_OBJ %r2;
    MOV %r3 "TOO YOUNG!~~~?";
    MOV %r4 @c1;
    ADD %r3 %r4;
    SET_KEY %r2 "name" %r3;
    PUSH %r2;
    MOV_CTX %r2 "page";
    MOV %r3 "setData";
    CALL_VAR %r2 %r3 1;
    NEW_OBJ %r2;
    MOV %r3 "NNNN";
    SET_KEY %r2 "motto" %r3;
    PUSH %r2;
    MOV_CTX %r2 "page";
    MOV %r3 "setData";
    CALL_VAR %r2 %r3 1;
    MOV_CTX %r4 "page";
    MOV %r5 "items";
    MOV_PROP %r3 %r4 %r5;
    MOV %r2 %r3;
    JF %r3 _l2_;
    MOV_CTX %r8 "page";
    MOV %r9 "items";
    MOV_PROP %r6 %r8 %r9;
    MOV %r7 "length";
    MOV_PROP %r4 %r6 %r7;
    MOV %r5 0;
    GT %r4 %r5;
    AND %r2 %r4;
LABEL _l2_:
    JF %r2 _l0_;
    MOV_CTX %r6 "Math";
    MOV %r7 "random";
    CALL_VAR %r6 %r7 0;
    MOV %r5 $RET;
    PUSH %r5;
    MOV_CTX %r7 "page";
    MOV %r6 "items";
    MOV_PROP %r5 %r7 %r6;
    MOV %r6 "push";
    CALL_VAR %r5 %r6 1;
    MOV_CTX %r8 "page";
    MOV %r9 "a";
    MOV_PROP %r7 %r8 %r9;
    MOV %r6 %r7;
    JF %r7 _l5_;
    MOV_CTX %r9 "page";
    MOV %r10 "b";
    MOV_PROP %r8 %r9 %r10;
    AND %r6 %r8;
LABEL _l5_:
    MOV %r5 %r6;
    JIF %r6 _l4_;
    MOV_CTX %r10 "page";
    MOV %r11 "c";
    MOV_PROP %r9 %r10 %r11;
    OR %r5 %r9;
LABEL _l4_:
    JF %r5 _l3_;
    MOV %r10 "DOO";
    PUSH %r10;
    MOV_CTX %r10 "console";
    MOV %r11 "log";
    CALL_VAR %r10 %r11 1;
    JMP _l1_;
LABEL _l3_:
    JMP _l1_;
LABEL _l0_:
    NEW_ARR %r9;
    MOV_CTX %r10 "page";
    MOV %r11 "items";
    SET_KEY %r10 %r11 %r9;
    MOV_CTX %r10 "Math";
    MOV %r11 "random";
    CALL_VAR %r10 %r11 0;
    MOV %r9 $RET;
    PUSH %r9;
    MOV_CTX %r11 "page";
    MOV %r10 "items";
    MOV_PROP %r9 %r11 %r10;
    MOV %r10 "push";
    CALL_VAR %r9 %r10 1;
LABEL _l1_:
    NEW_OBJ %r8;
    MOV_CTX %r10 "page";
    MOV %r11 "items";
    MOV_PROP %r9 %r10 %r11;
    SET_KEY %r8 "items" %r9;
    PUSH %r8;
    MOV_CTX %r8 "page";
    MOV %r9 "setData";
    CALL_VAR %r8 %r9 1;
}
func ___f___4() {
    VAR %r0;
    VAR %r1;
    VAR %r2;
    VAR %r3;
    VAR items;
    MOV_CTX %r2 "page";
    MOV %r3 "data";
    MOV_PROP %r0 %r2 %r3;
    MOV %r1 "items";
    MOV_PROP items %r0 %r1;
    MOV %r0 items;
    MOV %r1 "pop";
    CALL_VAR %r0 %r1 0;
    NEW_OBJ %r0;
    MOV %r1 items;
    SET_KEY %r0 "items" %r1;
    PUSH %r0;
    MOV_CTX %r0 "page";
    MOV %r1 "setData";
    CALL_VAR %r0 %r1 1;
}
func ___f___5() {
    VAR %r0;
    VAR %r1;
    VAR %r2;
    VAR %r3;
    VAR %r4;
    VAR c;
    MOV c 'good';
    MOV %r0 @c0;
    SUB %r0 1;
    MOV @c0 %r0;
    MOV %r0 @c1;
    ADD %r0 1;
    MOV @c1 %r0;
    MOV %r0 @c0;
    MOV %r1 @c1;
    ADD %r0 %r1;
    PUSH %r0;
    MOV %r0 @c1;
    PUSH %r0;
    MOV %r1 c;
    PUSH %r1;
    MOV %r2 @c0;
    PUSH %r2;
    MOV_CTX %r3 "console";
    MOV %r4 "log";
    CALL_VAR %r3 %r4 4;
}
