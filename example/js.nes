func main() {
    VAR _r0_;
    VAR _r1_;
    VAR _r2_;
    VAR _r3_;
    VAR _r4_;
    VAR _r5_;
    VAR a;
    NEW_OBJ a;
    MOV _r0_ 'b';
    SET_KEY a "a" _r0_;
    MOV _r0_ 'm';
    SET_KEY a "k" _r0_;
    NEW_OBJ _r0_;
    MOV _r1_ 'good';
    SET_KEY _r0_ "d" _r1_;
    SET_KEY a "c" _r0_;
    VAR b;
    NEW_ARR b;
    MOV _r0_ 1;
    SET_KEY b 0 _r0_;
    MOV _r0_ 2;
    SET_KEY b 1 _r0_;
    MOV _r0_ 3;
    SET_KEY b 2 _r0_;
    NEW_OBJ _r0_;
    MOV _r1_ a;
    SET_KEY _r0_ "c" _r1_;
    SET_KEY b 3 _r0_;
    VAR c;
    NEW_OBJ c;
    MOV _r0_ a;
    SET_KEY c "a" _r0_;
    MOV _r0_ b;
    SET_KEY c "b" _r0_;
    MOV _r0_ 0;
    SET_KEY c "i" _r0_;
    VAR ppp;
    MOV ppp 0;
    MOV _r0_ 0;
    SET_CTX "i" _r0_;
LABEL _l0_:
    MOV _r2_ c;
    MOV _r3_ "i";
    MOV_PROP _r0_ _r2_ _r3_;
    MOV _r2_ b;
    MOV _r3_ "length";
    MOV_PROP _r1_ _r2_ _r3_;
    LT _r0_ _r1_;
    JF _r0_ _l1_;
    PUSH b;
    MOV _r2_ c;
    MOV _r3_ "i";
    MOV_PROP _r1_ _r2_ _r3_;
    PUSH _r1_;
    MOV _r2_ b;
    MOV _r5_ c;
    MOV _r4_ "i";
    MOV_PROP _r3_ _r5_ _r4_;
    MOV_PROP _r1_ _r2_ _r3_;
    PUSH _r1_;
    MOV_CTX _r1_ "console";
    MOV _r2_ "log";
    CALL_VAR _r1_ _r2_ 3;
    MOV _r2_ c;
    MOV _r3_ "i";
    MOV_PROP _r1_ _r2_ _r3_;
    ADD _r1_ 1;
    MOV _r2_ c;
    MOV _r3_ "i";
    SET_KEY _r2_ _r3_ _r1_;
    JMP _l0_;
LABEL _l1_:
    VAR i;
    MOV i 0;
LABEL _l2_:
    MOV _r0_ i;
    MOV _r1_ 100;
    LT _r0_ _r1_;
    JF _r0_ _l3_;
    PUSH i;
    MOV _r1_ " --> ";
    PUSH _r1_;
    MOV_CTX _r1_ "console";
    MOV _r2_ "log";
    CALL_VAR _r1_ _r2_ 2;
    MOV _r1_ i;
    MOV _r3_ 13;
    DIV _r1_ _r3_;
    MOV _r2_ 1;
    EQ _r1_ _r2_;
    JF _r1_ _l4_;
    PUSH i;
    MOV _r2_ "this is the outer test";
    PUSH _r2_;
    MOV_CTX _r2_ "console";
    MOV _r3_ "log";
    CALL_VAR _r2_ _r3_ 2;
    MOV _r2_ RET;
    VAR j;
    MOV j 0;
LABEL _l6_:
    MOV _r2_ j;
    MOV _r3_ i;
    LT _r2_ _r3_;
    JF _r2_ _l7_;
    MOV _r3_ i;
    MOV _r4_ j;
    ADD _r3_ _r4_;
    PUSH _r3_;
    PUSH j;
    PUSH i;
    MOV _r3_ "INNER TEST";
    PUSH _r3_;
    MOV_CTX _r3_ "console";
    MOV _r4_ "log";
    CALL_VAR _r3_ _r4_ 4;
    MOV _r3_ ppp;
    ADD _r3_ 1;
    MOV ppp _r3_;
    MOV _r3_ j;
    ADD _r3_ 1;
    MOV j _r3_;
    JMP _l6_;
LABEL _l7_:
    JMP _l3_;
    PUSH j;
    PUSH i;
    CALL sayHi 2;
    JMP _l5_;
LABEL _l4_:
LABEL _l5_:
    MOV _r1_ i;
    ADD _r1_ 1;
    MOV i _r1_;
    JMP _l2_;
LABEL _l3_:
    PUSH ppp;
    MOV_CTX _r0_ "console";
    MOV _r1_ "log";
    CALL_VAR _r0_ _r1_ 1;
    MOV _r0_ 3;
    PUSH _r0_;
    CALLBACK _r0_ ___f___0;
    PUSH _r0_;
    CALL_CTX "setTimeout" 2;
}
func sayHi(a, b) {
    VAR _r0_;
    VAR _r1_;
    VAR _r2_;
    MOV _r0_ a;
    MOV _r1_ b;
    ADD _r0_ _r1_;
    PUSH _r0_;
    MOV _r0_ 'GOOD -> ';
    PUSH _r0_;
    MOV_CTX _r0_ "console";
    MOV _r1_ "log";
    CALL_VAR _r0_ _r1_ 2;
    MOV _r0_ RET;
    VAR j;
    MOV j 100;
    VAR i;
    MOV i 30;
LABEL _l8_:
    MOV _r0_ i;
    MOV _r1_ j;
    LT _r0_ _r1_;
    JF _r0_ _l9_;
    MOV _r1_ j;
    SUB _r1_ 1;
    MOV j _r1_;
    PUSH j;
    PUSH i;
    MOV _r1_ 'youth';
    PUSH _r1_;
    MOV_CTX _r1_ "console";
    MOV _r2_ "log";
    CALL_VAR _r1_ _r2_ 3;
    MOV _r1_ i;
    ADD _r1_ 1;
    MOV i _r1_;
    JMP _l8_;
LABEL _l9_:
}
func ___f___0() {
    VAR _r0_;
    VAR _r1_;
    NEW_OBJ _r0_;
    MOV _r1_ "GOodNigh.";
    SET_KEY _r0_ "title" _r1_;
    PUSH _r0_;
    MOV_CTX _r0_ "wx";
    MOV _r1_ "showToast";
    CALL_VAR _r0_ _r1_ 1;
}
